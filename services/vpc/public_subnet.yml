Resources:
  # ---------------------
  # PublicSubnet
  # ---------------------
  PublicSubnet0:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, PublicSubnet0, CIDR]
      AvailabilityZone: !Select
          - 0
          - Fn::GetAZs: !Ref "AWS::Region"
      MapPublicIpOnLaunch: "true"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-subnet0

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, PublicSubnet1, CIDR]
      AvailabilityZone: !Select
          - 1
          - Fn::GetAZs: !Ref "AWS::Region"
      MapPublicIpOnLaunch: "true"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-subnet1

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !FindInMap [SubnetConfig, PublicSubnet2, CIDR]
      AvailabilityZone: !Select
          - 2
          - Fn::GetAZs: !Ref "AWS::Region"
      MapPublicIpOnLaunch: "true"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-public-subnet2

Outputs:
  PublicSubnet0:
    Description: "subnet id of public subnet0"
    Value: !Ref PublicSubnet0
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet0"

  PublicSubnet1:
    Description: "subnet id of public subnet1"
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet1"

  PublicSubnet2:
    Description: "subnet id of public subnet2"
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub "${AWS::Region}-${AWS::StackName}-PublicSubnet2"